import { getCookie, removeCookies, setCookies } from "cookies-next";
import Head from "next/head";
import { WP_BaseHttp } from "../src/axios/wp";
import Footer from "../src/components/Footer/Footer.component";
import { Header } from "../src/components/Header/Header.components";
import { getHomepageData } from "../src/wp-rest/getHomepageData.call";
import { getMenuCategoriesData } from "../src/wp-rest/getMenuCategoriesData.call";

export default function DashboardPage({ data, categoriesLinkList }) {
  return (
    <div>
      <Head>
        <title>Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header data={data} categories={categoriesLinkList} />
      <h1>You are logged in</h1>
      <Footer data={data} />
    </div>
  );
}

export async function getServerSideProps(context) {
  const token = getCookie("accessToken", context);
  const { req, res } = context;

  if (!token) {
    return {
      redirect: {
        destination: "/",
        permanent: false,
      },
    };
  }

  const config = {
    headers: { Authorization: `Bearer ${token}` },
  };

  let invalidToken = false;
  let response;

  try {
    response = await WP_BaseHttp.get(
      "wp-json/simple-jwt-login/v1/auth/validate",
      config
    );
  } catch {
    invalidToken = true;
  }

  if (invalidToken) {
    try {
      response = await WP_BaseHttp.post(
        "wp-json/simple-jwt-login/v1/auth/refresh",
        {
          JWT: token,
        }
      );
      removeCookies("accessToken", { req, res });
      setCookies("accessToken", response.data.data.jwt, {
        req,
        res,
        maxAge: 60 * 60 * 24 * 14,
        sameSite: true,
      });
    } catch (err) {
      return {
        redirect: {
          destination: "/",
          permanent: false,
        },
      };
    }
  }

  const data = await getHomepageData();
  const categoriesLinkList = await getMenuCategoriesData();

  return {
    props: {
      data,
      categoriesLinkList,
    }, // will be passed to the page component as props
  };
}
