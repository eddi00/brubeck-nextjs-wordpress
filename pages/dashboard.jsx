import { getCookie, removeCookies, setCookies } from "cookies-next";
import jwtDecode from "jwt-decode";
import Head from "next/head";
import { WP_BaseHttp } from "../src/axios/wp";
import Dashboard from "../src/components/Dashboard.page/Dashboard.component";
import Footer from "../src/components/Footer/Footer.component";
import { Header } from "../src/components/Header/Header.components";
import { getCustomerData } from "../src/wp-rest/getCustomerData";
import { getHomepageData } from "../src/wp-rest/getHomepageData.call";
import { getMenuCategoriesData } from "../src/wp-rest/getMenuCategoriesData.call";
import { getOrdersFromUser } from "../src/wp-rest/getOrdersFromUserId.call";
import nc from "next-connect";
import { verifySessionCookieSSR } from "../src/lib/API-Middleware/verifySessionCookieSSR";

export default function DashboardPage({
  data,
  categoriesLinkList,
  orders,
  customer,
}) {
  return (
    <div>
      <Head>
        <title>Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header data={data} categories={categoriesLinkList} />
      <Dashboard customer={customer} orders={orders} />
      <Footer data={data} />
    </div>
  );
}

const handler = nc().use(verifySessionCookieSSR);

export async function getServerSideProps({ req, res }) {
  await handler.run(req, res);

  switch (req.error) {
    case "noToken":
      return {
        redirect: {
          destination: "/",
          permanent: false,
        },
      };
    case "invalidToken":
      return {
        redirect: {
          destination: "/signOut",
          permanent: false,
        },
      };
  }

  const token = getCookie("accessToken", { req, res });
  const user = jwtDecode(token);

  const data = await getHomepageData();
  const categoriesLinkList = await getMenuCategoriesData();
  const orders = await getOrdersFromUser(user);
  const customer = JSON.parse(await getCustomerData(user));

  return {
    props: {
      data,
      categoriesLinkList,
      orders,
      customer,
    }, // will be passed to the page component as props
  };
}
