import Head from "next/head";

import { getHomepageData } from "../../src/wp-rest/getHomepageData.call";
import { getMenuCategoriesData } from "../../src/wp-rest/getMenuCategoriesData.call";
import { getProduct } from "../../src/wp-rest/getProduct";
import { getAllProducts } from "../../src/wp-rest/getAllProducts.call";

import { Header } from "../../src/components/Header/Header.components";
import Footer from "../../src/components/Footer/Footer.component";
import Product from "../../src/components/Product.page/Product.component";
import { getColorTable } from "../../src/wp-rest/getColorTable.call";

export default function ProductId({
  data,
  categoriesLinkList,
  product,
  colorTable,
}) {
  return (
    <div>
      <Head>
        <title>{product.name} - Brubeck</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header data={data} categories={categoriesLinkList} />

      <Product product={product} colorTable={colorTable} />

      <Footer data={data} />
    </div>
  );
}

// This function gets called at build time
export async function getStaticPaths() {
  const products = await getAllProducts();

  // Get the paths we want to pre-render based on posts
  const paths = products.map(product => ({
    params: { id: String(product.id) },
  }));

  // We'll pre-render only these paths at build time.
  // { fallback: false } means other routes should 404.
  return { paths, fallback: false };
}

// This function gets called at build time on server-side.
// It may be called again, on a serverless function, if
// revalidation is enabled and a new request comes in
export async function getStaticProps({ params }) {
  const data = await getHomepageData();
  const categoriesLinkList = await getMenuCategoriesData();
  const product = await getProduct(params.id);
  const colorTable = await getColorTable();

  return {
    props: {
      data,
      categoriesLinkList,
      product,
      colorTable,
    },
    // Next.js will attempt to re-generate the page:
    // - When a request comes in
    // - At most once every 10 seconds
    revalidate: 10, // In seconds
  };
}
